{"version":3,"sources":["components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","components/Input/Input.jsx","components/Select/Select.jsx","App.jsx","index.js"],"names":["TodoList","todos","selectedUser","className","map","todo","key","id","completed","type","checked","readOnly","title","onClick","userId","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","CurrentUser","state","user","this","loadData","prevProps","selectedUserId","props","setState","name","email","phone","React","Component","defaultProps","Input","valueOnInput","filterOnInput","placeholder","value","onChange","Select","valueOnSelect","filterBySelect","App","filteredTodos","event","target","prevState","filter","includes","booleanValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.758328a3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport const TodoList = ({\n  todos,\n  selectedUser,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={todo.completed\n              ? 'TodoList__item TodoList__item--checked'\n              : 'TodoList__item TodoList__item--unchecked'}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className=\"TodoList__user-button button\"\n              type=\"button\"\n              onClick={() => selectedUser(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  }).isRequired).isRequired,\n  selectedUser: PropTypes.func.isRequired,\n};\n","// eslint-disable-next-line\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.selectedUserId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { selectedUser } = this.props;\n\n    return (\n      <div className=\"App__content-container\">\n        <div className=\"CurrentUser\">\n          {user ? (\n            <>\n              <h2 className=\"CurrentUser__title\">\n                <span>{`Selected user: ${user.id}`}</span>\n              </h2>\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n            </>\n          ) : (\n            <div className=\"CurrentUser__waiting\">\n              Error, select another user\n            </div>\n          )}\n          <button\n            className=\"CurrentUser__clear button\"\n            type=\"button\"\n            onClick={() => selectedUser(0)}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  selectedUserId: PropTypes.number,\n  selectedUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  selectedUserId: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Input.scss';\n\nexport const Input = ({ valueOnInput, filterOnInput }) => (\n  <input\n    className=\"input\"\n    type=\"text\"\n    name=\"valueOnInput\"\n    placeholder=\"Title\"\n    value={valueOnInput}\n    onChange={filterOnInput}\n  />\n);\n\nInput.propTypes = {\n  valueOnInput: PropTypes.string.isRequired,\n  filterOnInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Select.scss';\n\nexport const Select = ({ valueOnSelect, filterBySelect }) => (\n  <select\n    className=\"select\"\n    name=\"valueOnSelect\"\n    value={valueOnSelect}\n    onChange={filterBySelect}\n  >\n    <option\n      value=\"all\"\n    >\n      All\n    </option>\n    <option\n      value=\"not completed\"\n    >\n      Active\n    </option>\n    <option\n      value=\"completed\"\n    >\n      Completed\n    </option>\n  </select>\n);\n\nSelect.propTypes = {\n  valueOnSelect: PropTypes.string.isRequired,\n  filterBySelect: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { Input } from './components/Input';\nimport { Select } from './components/Select';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n    valueOnInput: '',\n    valueOnSelect: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        const filteredTodos = todos.filter(todo => (\n          todo.title && todo.id\n        ));\n\n        this.setState({\n          todos: filteredTodos,\n          filteredTodos,\n        });\n      });\n  }\n\n  selectedUser = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  };\n\n  filterOnInput = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      valueOnInput: value,\n      filteredTodos: prevState.todos.filter(todo => (\n        todo.title.includes(value)\n      )),\n    }));\n  };\n\n  filterBySelect = (event) => {\n    const { value } = event.target;\n\n    if (value === 'all') {\n      this.setState(prevState => ({\n        filteredTodos: prevState.todos,\n        valueOnSelect: value,\n      }));\n    }\n\n    const booleanValue = value === 'completed';\n\n    if (value === 'completed' || value === 'not completed') {\n      this.setState(prevState => ({\n        filteredTodos: prevState.todos.filter(todo => (\n          todo.completed === booleanValue\n        )),\n        valueOnSelect: value,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      filteredTodos,\n      selectedUserId,\n      valueOnInput,\n      valueOnSelect,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <div className=\"App__filter\">\n            <Input\n              valueOnInput={valueOnInput}\n              filterOnInput={this.filterOnInput}\n            />\n            <Select\n              valueOnSelect={valueOnSelect}\n              filterBySelect={this.filterBySelect}\n            />\n          </div>\n          <TodoList\n            todos={filteredTodos}\n            selectedUser={this.selectedUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId\n            ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                selectedUser={this.selectedUser}\n              />\n            ) : (\n              <div className=\"App__text\">Please, select a user</div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
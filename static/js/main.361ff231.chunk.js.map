{"version":3,"sources":["components/Input/Input.jsx","components/Select/Select.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Input","valueOnInput","filterOnInput","className","type","name","placeholder","value","onChange","Select","valueOnSelect","filterBySelect","TodoList","todos","selectedUser","map","todo","key","id","completed","checked","readOnly","title","onClick","userId","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","CurrentUser","state","user","this","loadData","prevProps","selectedUserId","props","setState","email","phone","React","Component","defaultProps","App","filteredTodos","event","target","prevState","filter","includes","booleanValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.361ff231.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ valueOnInput, filterOnInput }) => (\n  <input\n    className=\"TodoList__input\"\n    type=\"text\"\n    name=\"valueOnInput\"\n    placeholder=\"Title\"\n    value={valueOnInput}\n    onChange={filterOnInput}\n  />\n);\n\nInput.propTypes = {\n  valueOnInput: PropTypes.string.isRequired,\n  filterOnInput: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({ valueOnSelect, filterBySelect }) => (\n  <select\n    className=\"TodoList__select\"\n    name=\"valueOnSelect\"\n    value={valueOnSelect}\n    onChange={filterBySelect}\n  >\n    <option\n      value=\"all\"\n    >\n      All\n    </option>\n    <option\n      value=\"not completed\"\n    >\n      Active\n    </option>\n    <option\n      value=\"completed\"\n    >\n      Completed\n    </option>\n  </select>\n);\n\nSelect.propTypes = {\n  valueOnSelect: PropTypes.string.isRequired,\n  filterBySelect: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nimport { Input } from '../Input';\nimport { Select } from '../Select';\n\nexport const TodoList = ({\n  todos,\n  selectedUser,\n  filterOnInput,\n  filterBySelect,\n  valueOnInput,\n  valueOnSelect,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <div className=\"TodoList__filter\">\n        <Input\n          valueOnInput={valueOnInput}\n          filterOnInput={filterOnInput}\n        />\n        <Select\n          valueOnSelect={valueOnSelect}\n          filterBySelect={filterBySelect}\n        />\n      </div>\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={todo.completed\n              ? 'TodoList__item TodoList__item--checked'\n              : 'TodoList__item TodoList__item--unchecked'}\n          >\n            <label>\n              {todo.completed\n                ? <input type=\"checkbox\" checked readOnly />\n                : <input type=\"checkbox\" readOnly />\n              }\n              <p>{todo.title}</p>\n            </label>\n            <button\n              className=\"TodoList__user-button button\"\n              type=\"button\"\n              onClick={() => selectedUser(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  }).isRequired).isRequired,\n  selectedUser: PropTypes.func.isRequired,\n  filterOnInput: PropTypes.func.isRequired,\n  filterBySelect: PropTypes.func.isRequired,\n  valueOnInput: PropTypes.string.isRequired,\n  valueOnSelect: PropTypes.string.isRequired,\n};\n","// eslint-disable-next-line\nconst BASE_URL = `https://mate-api.herokuapp.com`;\n\nconst request = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = userId => request(`/users/${userId}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.selectedUserId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { selectedUser } = this.props;\n\n    return (\n      <div className=\"App__content-container\">\n        <div className=\"CurrentUser\">\n          {user\n            ? (\n              <>\n                <h2 className=\"CurrentUser__title\">\n                  <span>{`Selected user: ${user.id}`}</span>\n                </h2>\n                <h3 className=\"CurrentUser__name\">{user.name}</h3>\n                <p className=\"CurrentUser__email\">{user.email}</p>\n                <p className=\"CurrentUser__phone\">{user.phone}</p>\n              </>\n            ) : (\n              <div className=\"CurrentUser__waiting\">\n                Error, select another user\n              </div>\n            )\n          }\n          <button\n            className=\"CurrentUser__clear button\"\n            type=\"button\"\n            onClick={() => selectedUser(0)}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  selectedUserId: PropTypes.number,\n  selectedUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  selectedUserId: 0,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    selectedUserId: 0,\n    valueOnInput: '',\n    valueOnSelect: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        const filteredTodos = todos.filter(todo => (\n          todo.title && todo.id\n        ));\n\n        this.setState({\n          todos: filteredTodos,\n          filteredTodos,\n        });\n      });\n  }\n\n  selectedUser = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  };\n\n  filterOnInput = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      valueOnInput: value,\n      filteredTodos: prevState.todos.filter(todo => (\n        todo.title.includes(value)\n      )),\n    }));\n  };\n\n  filterBySelect = (event) => {\n    const { value } = event.target;\n\n    if (value === 'all') {\n      this.setState(prevState => ({\n        filteredTodos: prevState.todos,\n        valueOnSelect: value,\n      }));\n    }\n\n    const booleanValue = value === 'completed';\n\n    if (value === 'completed' || value === 'not completed') {\n      this.setState(prevState => ({\n        filteredTodos: prevState.todos.filter(todo => (\n          todo.completed === booleanValue\n        )),\n        valueOnSelect: value,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      filteredTodos,\n      selectedUserId,\n      valueOnInput,\n      valueOnSelect,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filteredTodos}\n            selectedUser={this.selectedUser}\n            filterOnInput={this.filterOnInput}\n            filterBySelect={this.filterBySelect}\n            valueOnInput={valueOnInput}\n            valueOnSelect={valueOnSelect}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedUserId\n            ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                selectedUser={this.selectedUser}\n              />\n            ) : (\n              <div className=\"App__text\">Please, select a user</div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}